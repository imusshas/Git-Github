git config
git config --global --list 
    [You will get an error if you haven't config git]

To config git [
    git config --global user.name "<your_name>"
    git config --global user.email "<your_email>"
]

Go to the working directory

git status
git init (Only if status gives fatal error)
git add . (To add all unstage changes)
git add <file_name/folder_name> (To add a particular unstage change)
git rm --cached <file_name/folder_name> (To unstage)
git log (To see the commits)
git commit -m <message>

N.B: Every time any file is modified/created it must be added into the staging area.
git commit -a -m <message> (To skip  stage changes)
git diff (To see what changes have been made in a file/folder)
git diff --staged (To see the changes in the staged area which are not been commited)
git branch -M <branch_name> (To create a new branch)
ssh-keygen -o (For one machine it is needed to be done for once)

[
    cd
    cd .ssh
    ls -a
    cat id_rsa.pub
]

git remote add origin <SSH_link> (To connect a remote github repository with the machine's local repository)

git push -u origin <branch_name> (To push local repository to remote repository)
git push -f origin <branch_name> (To push forfully. This will override all the works in the remote repository.)
git push origin <branch_name>
git remote -v (To fetch & push)

Workin with tag [
    What is a tag?
    Ans: When we have an application that is useable we release a version of it. It's called a tag


    git tag
    Annotated Tagging [
        git tag -a <version_number> -m <message> (To add a tag)
        git show <version_number> (To see the tag)
    ]
    Lightweight Tagging []

    git push origin <tag_version_name>
]

Clone a project [
    git clone <https_url>
]

Creating branch [
    git branch -M <branch_name>
]